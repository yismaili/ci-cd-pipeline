- name: Configuration and Provisioning of the VM with Ansible
  hosts: all
  gather_facts: no
  vars:
    docker_registry: "192.168.100.75:5000"
    app_user: "yoyo"
    app_repo: "https://github.com/yismaili/ci-cd"
    app_dir: "/home/yoyo/app"

  tasks:
    - name: Install required packages
      become: yes
      apt:
        name:
          - docker.io
          - docker-compose
          - git
        state: present
        update_cache: yes

    - name: Configure Docker logging
      become: yes
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            }
          }
        mode: '0644'
      notify: Restart Docker

    - name: Set up a Cron job for Docker cleanup
      become: yes
      cron:
        name: "Docker Cleanup"
        minute: "0"
        hour: "3"
        job: "/usr/bin/docker system prune -af"

    - name: Add user to Docker group
      become: yes
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create a directory for the application
      become: yes
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Configure Git to mark the app directory as safe
      become: yes
      command: git config --global --add safe.directory "{{ app_dir }}"

    - name: Clone application repository
      become: yes
      git:
        repo: "{{ app_repo }}"
        dest: "{{ app_dir }}"
        version: master

    - name: Build backend Docker image
      become: yes
      docker_image:
        build:
          path: "{{ app_dir }}/backend"
        name: backend
        tag: latest

    - name: Build frontend Docker image
      become: yes
      docker_image:
        build:
          path: "{{ app_dir }}/frontend"
        name: frontend
        tag: latest

    - name: Run backend Docker container
      become: yes
      docker_container:
        name: backend
        image: backend:latest
        state: started
        restart_policy: always
        ports:
          - "3001:3001"

    - name: Run frontend Docker container
      become: yes
      docker_container:
        name: frontend
        image: frontend:latest
        state: started
        restart_policy: always
        ports:
          - "3000:3000"
        depends_on:
          - backend

  handlers:
    - name: Restart Docker
      become: yes
      systemd:
        name: docker
        state: restarted
        enabled: yes


    # - name: Pull backend Docker image
    #   docker_image:
    #     name: "{{ docker_registry }}/ci-cd:backend-a7de1d6-43"
    #     source: pull

    # - name: Pull frontend Docker image
    #   docker_image:
    #     name: "{{ docker_registry }}/ci-cd:frontend-a7de1d6-43"
    #     source: pull

