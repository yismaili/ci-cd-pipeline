---
- name: Configuration and Provisioning of the VM with Ansible
  hosts: all
  gather_facts: no
  vars:
    docker_registry: "192.168.100.75:5000"
    docker_images:
      - "localhost:5000/ci-cd/backend-3152c39-34"
      - "localhost:5000/ci-cd/backend-3152c39-35"
      - "localhost:5000/ci-cd/backend-558219d-33"
      - "localhost:5000/ci-cd/frontend-3152c39-34"
      - "localhost:5000/ci-cd/frontend-3152c39-35"
      - "localhost:5000/ci-cd/frontend-558219d-33"
      - "postgres:latest"
      - "registry:2"

  tasks:
    - name: Install Docker and Docker Compose
      become: yes
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker.io
        - docker-compose

    - name: Configure Docker logging
      become: yes
      lineinfile:
        path: /etc/docker/daemon.json
        line: '{"log-driver": "json-file", "log-opts": {"max-size": "100m"}}'
        create: yes

    - name: Set up a Cronjob for Docker cleanup
      become: yes
      copy:
        content: |
          0 3 * * * /usr/bin/docker system prune -af
        dest: /etc/cron.d/docker_cleanup
        mode: '0644'

    - name: Add user to Docker group
      become: yes
      user:
        name: "{{ ansible_ssh_user }}"
        groups: docker
        append: yes

    - name: Create a directory for application
      become: yes
      file:
        path: /home/yoyo/app
        state: directory

    - name: Clone application repository
      become: yes
      git:
        repo: https://github.com/yismaili/ci-cd
        dest: /home/yoyo/app

    - name: Pull Docker images from local registry
      become: yes
      docker_image:
        name: "{{ item }}"
        source: pull
      loop: "{{ docker_images }}"
      when: "'docker' in group_names"

- name: Transfer Docker images from vm1 to vm2
  hosts: vm1
  gather_facts: no
  tasks:
    - name: Save Docker images to tar files
      become: yes
      command: docker save -o /tmp/{{ item.split('/')[-1] }}.tar {{ item }}
      loop: "{{ docker_images }}"
      args:
        creates: /tmp/{{ item.split('/')[-1] }}.tar

    - name: Transfer Docker image tar files to vm2
      become: yes
      copy:
        src: /tmp/{{ item.split('/')[-1] }}.tar
        dest: /tmp/{{ item.split('/')[-1] }}.tar
      loop: "{{ docker_images }}"
      delegate_to: vm2

- name: Load Docker images on vm2
  hosts: vm2
  gather_facts: no
  tasks:
    - name: Load Docker images from tar files
      become: yes
      command: docker load -i /tmp/{{ item.split('/')[-1] }}.tar
      loop: "{{ docker_images }}"

    - name: Clean up tar files on vm2
      become: yes
      file:
        path: /tmp/{{ item.split('/')[-1] }}.tar
        state: absent
      loop: "{{ docker_images }}"
